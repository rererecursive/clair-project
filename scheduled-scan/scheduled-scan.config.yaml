component_version: 1.0.0

alarms:
  Defcon1:
    rule_expression: [cve=CVE* && threshold=Defcon1]
  Critical:
    rule_expression: [cve=CVE* && threshold=Critical]

lambdas:
  functions:
    stackcollector:
      handler: handler.lambda_handler
      runtime: python3.6
      code: stack-collector/handler.py
      role: StackCollector
      timeout: 30
      environment:
        ACCOUNT_ID:
          Ref: AWS::AccountId
        TARGET_FUNCTION_ARN:
          Fn::GetAtt: [ imagecollector, Arn ]
        STACKS:
          Ref: Stacks
      log_retention: 14
      events:
        cron:
          type: schedule
          expression: rate(12 hours)

    imagecollector:
      handler: handler.lambda_handler
      runtime: python3.6
      code: image-collector/handler.py
      role: ImageCollector
      timeout: 60
      environment:
        ACCOUNT_ID:
          Ref: AWS::AccountId
        TASK_DEFINITION_ARN:
          Ref: TaskDefinition
        ECS_CLUSTER:
          Ref: Cluster
      log_retention: 14

  custom_policies:
    invoke-lambda:
      action:
        - lambda:Invoke
      resource:
        - Fn::GetAtt: [ imagecollector, Arn ]
    describe-cloudformation:
      action:
        - cloudformation:DescribeStackResources
      resource:
        - '*'
    ecs:
      action:
        - ecs:DescribeTaskDefinition
        - ecs:RunTask
      resource:
        - '*'

  roles:
    StackCollector:
      policies_inline:
        - cloudwatch-logs
        - invoke-lambda
    ImageCollector:
      policies_inline:
        - cloudwatch-logs
        - describe-cloudformation
        - ecs
